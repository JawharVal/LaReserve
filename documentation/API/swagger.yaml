{
  "openapi": "3.0.1",
  "info": {
    "title": "OpenAPI definition",
    "version": "v0"
  },
  "servers": [
    {
      "url": "http://localhost:8081",
      "description": "Generated server url"
    }
  ],
  "paths": {
    "/reviews/{id}": {
      "get": {
        "tags": [
          "review-controller"
        ],
        "operationId": "getReviewById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "review-controller"
        ],
        "operationId": "updateReview",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReviewDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "review-controller"
        ],
        "operationId": "deleteReview",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/reviews/{id}/approve": {
      "put": {
        "tags": [
          "review-controller"
        ],
        "operationId": "approveReview",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/restaurants/{id}": {
      "get": {
        "tags": [
          "restaurant-controller"
        ],
        "operationId": "getRestaurantById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestaurantDTO"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "restaurant-controller"
        ],
        "operationId": "updateRestaurant",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RestaurantDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestaurantDTO"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "restaurant-controller"
        ],
        "operationId": "deleteRestaurant",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/menuItems/{id}": {
      "get": {
        "tags": [
          "menu-controller"
        ],
        "summary": "Retrieve a single menu item by ID",
        "description": "Retrieves a menu item by its ID along with booking details.",
        "operationId": "getMenuItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Menu item retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MenuItemDto"
                }
              }
            }
          },
          "404": {
            "description": "Menu item not found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MenuItemDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "menu-controller"
        ],
        "summary": "Update an existing menu item",
        "description": "Updates an existing menu item by its ID, including its category.",
        "operationId": "updateMenuItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MenuItemDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Menu item updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MenuItemDto"
                }
              }
            }
          },
          "404": {
            "description": "Menu item not found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MenuItemDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "menu-controller"
        ],
        "summary": "Delete a menu item",
        "description": "Deletes a menu item by its ID.",
        "operationId": "deleteMenuItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Menu item deleted successfully"
          },
          "404": {
            "description": "Menu item not found"
          }
        }
      }
    },
    "/api/locations/{id}": {
      "get": {
        "tags": [
          "location-controller"
        ],
        "operationId": "getLocationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Location"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "location-controller"
        ],
        "operationId": "updateLocation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Location"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Location"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "location-controller"
        ],
        "operationId": "deleteLocation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/homePage/{id}": {
      "get": {
        "tags": [
          "home-page-controller"
        ],
        "summary": "Get a home page by ID",
        "description": "Retrieves a single home page by its ID.",
        "operationId": "getHomePageById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Home page retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HomePageDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "home-page-controller"
        ],
        "summary": "Update home page",
        "description": "Updates a home page by its ID.",
        "operationId": "updateHomePage",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HomePageDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Home page updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HomePageDto"
                }
              }
            }
          },
          "404": {
            "description": "Home page not found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HomePageDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/countries/{id}": {
      "get": {
        "tags": [
          "country-controller"
        ],
        "operationId": "getCountryById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Country"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "country-controller"
        ],
        "operationId": "updateCountry",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Country"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Country"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "country-controller"
        ],
        "operationId": "deleteCountry",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/cities/{id}": {
      "get": {
        "tags": [
          "city-controller"
        ],
        "operationId": "getCityById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/City"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "city-controller"
        ],
        "operationId": "updateCity",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "countryId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/City"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/City"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "city-controller"
        ],
        "operationId": "deleteCity",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/categories/{id}": {
      "get": {
        "tags": [
          "category-controller"
        ],
        "operationId": "getCategoryById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryDTO"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "category-controller"
        ],
        "operationId": "updateCategory",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryDTO"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "category-controller"
        ],
        "operationId": "deleteCategory",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/auth/{id}": {
      "get": {
        "tags": [
          "user-controller"
        ],
        "summary": "Get user by ID",
        "description": "Retrieves a user by their ID.",
        "operationId": "getUserById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDTO"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "user-controller"
        ],
        "summary": "Update user",
        "description": "Updates a user by their ID.",
        "operationId": "updateUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "User updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDTO"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "user-controller"
        ],
        "summary": "Delete user",
        "description": "Deletes a user by their ID.",
        "operationId": "deleteUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "User deleted successfully"
          }
        }
      }
    },
    "/api/auth/bookings/{id}": {
      "get": {
        "tags": [
          "booking-controller"
        ],
        "summary": "Get booking by ID",
        "description": "Retrieve a specific booking by its ID.",
        "operationId": "getBookingById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Booking found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookingDTO"
                }
              }
            }
          },
          "404": {
            "description": "Booking not found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BookingDTO"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "booking-controller"
        ],
        "summary": "Update an existing booking",
        "description": "Updates a booking based on the booking ID provided.",
        "operationId": "updateBooking",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BookingDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Booking updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookingDTO"
                }
              }
            }
          },
          "404": {
            "description": "Booking not found, failed to update",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "booking-controller"
        ],
        "summary": "Delete a booking",
        "operationId": "deleteBooking",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Booking deleted successfully",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "Booking not found",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/admin/users/{userId}/role": {
      "put": {
        "tags": [
          "admin-controller"
        ],
        "summary": "Update user role",
        "description": "Updates the role of a user based on the user ID.",
        "operationId": "updateUserRole",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "User role updated successfully",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "ROLE_ADMIN": []
          }
        ]
      }
    },
    "/admin/user/{id}": {
      "get": {
        "tags": [
          "admin-controller"
        ],
        "summary": "Get user by ID",
        "description": "Retrieves a user by their ID.",
        "operationId": "getUserById_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDTO"
                }
              }
            }
          }
        },
        "security": [
          {
            "ROLE_ADMIN": []
          }
        ]
      },
      "put": {
        "tags": [
          "admin-controller"
        ],
        "summary": "Edit user details",
        "description": "Updates user details for the specified user ID.",
        "operationId": "editUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "User updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDTO"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "ROLE_ADMIN": []
          }
        ]
      },
      "delete": {
        "tags": [
          "admin-controller"
        ],
        "summary": "Delete a user",
        "description": "Deletes a user by their ID.",
        "operationId": "deleteUser_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "ROLE_ADMIN": []
          }
        ]
      }
    },
    "/admin/menuItems/{id}": {
      "put": {
        "tags": [
          "admin-controller"
        ],
        "operationId": "updateMenuItem_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MenuItemDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MenuItemDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "admin-controller"
        ],
        "operationId": "deleteMenuItem_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/admin/categories/{id}": {
      "put": {
        "tags": [
          "admin-controller"
        ],
        "operationId": "updateCategory_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryDTO"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "admin-controller"
        ],
        "operationId": "deleteCategory_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/subscribe": {
      "get": {
        "tags": [
          "subscriber-controller"
        ],
        "summary": "Fetch all subscribers",
        "description": "Retrieve all subscribers from the database.",
        "operationId": "getAllSubscribers",
        "responses": {
          "200": {
            "description": "Successfully retrieved all subscribers",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subscriber"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "subscriber-controller"
        ],
        "summary": "Subscribe to newsletter",
        "description": "Subscribe a user to the newsletter.",
        "operationId": "subscribe",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriberDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Subscriber added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subscriber"
                }
              }
            }
          },
          "400": {
            "description": "Bad request, email already exists",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "Subscriber not found",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/reviews": {
      "post": {
        "tags": [
          "review-controller"
        ],
        "operationId": "createReview",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReviewDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/restaurants": {
      "get": {
        "tags": [
          "restaurant-controller"
        ],
        "operationId": "getAllRestaurants",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RestaurantDTO"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "restaurant-controller"
        ],
        "operationId": "createRestaurant",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RestaurantDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestaurantDTO"
                }
              }
            }
          }
        }
      }
    },
    "/contact": {
      "post": {
        "tags": [
          "contact-controller"
        ],
        "summary": "Handle contact form submission",
        "description": "Receives contact form data and sends an email to the administrator, then saves to database.",
        "operationId": "handleContactSubmission",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactForm"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Contact form processed successfully",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/menuItems": {
      "get": {
        "tags": [
          "menu-controller"
        ],
        "summary": "Retrieve all menu items",
        "description": "Retrieves all menu items from the database.",
        "operationId": "getAllMenuItems",
        "responses": {
          "200": {
            "description": "All menu items retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "menu-controller"
        ],
        "summary": "Add a new menu item",
        "description": "Creates a new menu item with a category.",
        "operationId": "addMenuItem",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MenuItemDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Menu item created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MenuItemDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/locations": {
      "get": {
        "tags": [
          "location-controller"
        ],
        "operationId": "getAllLocations",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Location"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "location-controller"
        ],
        "operationId": "createLocation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Location"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Location"
                }
              }
            }
          }
        }
      }
    },
    "/api/countries": {
      "get": {
        "tags": [
          "country-controller"
        ],
        "operationId": "getAllCountries",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Country"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "country-controller"
        ],
        "operationId": "createCountry",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Country"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Country"
                }
              }
            }
          }
        }
      }
    },
    "/api/cities": {
      "get": {
        "tags": [
          "city-controller"
        ],
        "operationId": "getAllCities",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/City"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "city-controller"
        ],
        "operationId": "createCity",
        "parameters": [
          {
            "name": "countryId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/City"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/categories": {
      "get": {
        "tags": [
          "category-controller"
        ],
        "operationId": "getAllCategories",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CategoryDTO"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "category-controller"
        ],
        "operationId": "createCategory",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth": {
      "get": {
        "tags": [
          "user-controller"
        ],
        "summary": "Get all users",
        "description": "Retrieves all users.",
        "operationId": "getAllUsers",
        "responses": {
          "200": {
            "description": "Users retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "user-controller"
        ],
        "summary": "Create a new user",
        "description": "Creates a new user.",
        "operationId": "createUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/register": {
      "post": {
        "tags": [
          "user-controller"
        ],
        "summary": "Register a new user",
        "description": "Registers a new user with a default role.",
        "operationId": "registerUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/logout": {
      "post": {
        "tags": [
          "user-controller"
        ],
        "summary": "Logout",
        "description": "Logs out the currently authenticated user.",
        "operationId": "logoutUser",
        "responses": {
          "200": {
            "description": "User logged out successfully",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": [
          "user-controller"
        ],
        "summary": "Login",
        "description": "Logs in a user and generates an access token.",
        "operationId": "loginUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "User logged in successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/bookings": {
      "post": {
        "tags": [
          "booking-controller"
        ],
        "summary": "Create a new booking",
        "operationId": "createBooking",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BookingDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Booking created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookingDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/bookings/admin/user/{userId}": {
      "post": {
        "tags": [
          "booking-controller"
        ],
        "summary": "Create a booking for a specific user",
        "description": "Creates a booking for a user based on the user ID provided and sends an email notification.",
        "operationId": "createBookingForUser",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BookingDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Booking created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookingDTO"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error, failed to create booking",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/admin/user": {
      "post": {
        "tags": [
          "admin-controller"
        ],
        "summary": "Add a new user",
        "description": "Creates a new user with admin privileges.",
        "operationId": "addUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad request, failed to create user",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "ROLE_ADMIN": []
          }
        ]
      }
    },
    "/admin/menuItems": {
      "get": {
        "tags": [
          "admin-controller"
        ],
        "operationId": "getAllMenuItems_1",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MenuItemDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "admin-controller"
        ],
        "operationId": "createMenuItem",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MenuItemDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MenuItemDto"
                }
              }
            }
          }
        }
      }
    },
    "/admin/categories": {
      "get": {
        "tags": [
          "admin-controller"
        ],
        "operationId": "getAllCategories_1",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CategoryDTO"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "admin-controller"
        ],
        "operationId": "createCategory_1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryDTO"
                }
              }
            }
          }
        }
      }
    },
    "/reviews/approved": {
      "get": {
        "tags": [
          "review-controller"
        ],
        "operationId": "getApprovedReviews",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReviewDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/reviews/all": {
      "get": {
        "tags": [
          "review-controller"
        ],
        "operationId": "getAllReviews",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReviewDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/menuItems/section/{section}": {
      "get": {
        "tags": [
          "menu-controller"
        ],
        "summary": "Retrieve all menu items by section",
        "description": "Retrieves all menu items by their section and optional category.",
        "operationId": "getMenuItemsBySection",
        "parameters": [
          {
            "name": "section",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "category",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Menu items retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "204": {
            "description": "No content, empty list",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MenuItemDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/homePages": {
      "get": {
        "tags": [
          "home-page-controller"
        ],
        "summary": "Get all home pages",
        "description": "Retrieves all home pages.",
        "operationId": "getHomePages",
        "responses": {
          "200": {
            "description": "Home pages retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/profile": {
      "get": {
        "tags": [
          "user-controller"
        ],
        "summary": "Get user profile",
        "description": "Retrieves the profile of the authenticated user.",
        "operationId": "getUserProfile",
        "responses": {
          "200": {
            "description": "User profile retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized, authentication required",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/bookings/user/{userId}": {
      "get": {
        "tags": [
          "booking-controller"
        ],
        "summary": "Get bookings by user ID",
        "description": "Fetch all bookings for a specific user.",
        "operationId": "getBookingsByUserId",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Bookings retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookingDTO"
                }
              }
            }
          },
          "500": {
            "description": "Error retrieving bookings",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BookingDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/bookings/exists": {
      "get": {
        "tags": [
          "booking-controller"
        ],
        "summary": "Check if booking exists",
        "description": "Check if there is an existing booking for the user on a given date.",
        "operationId": "checkExistingBooking",
        "parameters": [
          {
            "name": "date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Existence of booking checked successfully",
            "content": {
              "*/*": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/bookings/check-availability": {
      "get": {
        "tags": [
          "booking-controller"
        ],
        "summary": "Check availability",
        "description": "Check availability for a specific date.",
        "operationId": "checkAvailability",
        "parameters": [
          {
            "name": "date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Availability information retrieved successfully",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/users": {
      "get": {
        "tags": [
          "admin-controller"
        ],
        "summary": "Get all users",
        "description": "Retrieves all users.",
        "operationId": "getAllUsers_1",
        "responses": {
          "200": {
            "description": "Users retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "ROLE_ADMIN": []
          }
        ]
      }
    },
    "/admin/user/{userId}/bookings": {
      "get": {
        "tags": [
          "admin-controller"
        ],
        "summary": "Get bookings by user ID",
        "description": "Retrieves all bookings for a specific user.",
        "operationId": "getUserBookings",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Bookings retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error, failed to retrieve bookings",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BookingDTO"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "ROLE_ADMIN": []
          }
        ]
      }
    },
    "/subscribe/{email}": {
      "delete": {
        "tags": [
          "subscriber-controller"
        ],
        "operationId": "deleteSubscriber",
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ReviewDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "foodRating": {
            "type": "integer",
            "format": "int32"
          },
          "approved": {
            "type": "boolean"
          },
          "userId": {
            "type": "integer",
            "format": "int64"
          },
          "serviceRating": {
            "type": "integer",
            "format": "int32"
          },
          "ambienceRating": {
            "type": "integer",
            "format": "int32"
          },
          "valueForMoneyRating": {
            "type": "integer",
            "format": "int32"
          },
          "cleanlinessRating": {
            "type": "integer",
            "format": "int32"
          },
          "comments": {
            "type": "string"
          },
          "averageRating": {
            "type": "number",
            "format": "double"
          },
          "reviewDate": {
            "type": "string",
            "format": "date-time"
          },
          "username": {
            "type": "string"
          }
        }
      },
      "RestaurantDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "locationName": {
            "type": "string"
          },
          "cuisine": {
            "type": "string"
          },
          "capacity": {
            "type": "integer",
            "format": "int32"
          },
          "locationId": {
            "type": "integer",
            "format": "int64"
          },
          "bookingIds": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      },
      "MenuItemDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "section": {
            "type": "string"
          },
          "imageUrl": {
            "type": "string"
          },
          "price": {
            "type": "number",
            "format": "double"
          },
          "bookingIds": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "categoryName": {
            "type": "string"
          },
          "categoryId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "City": {
        "type": "object",
        "properties": {
          "cityId": {
            "type": "integer",
            "format": "int64"
          },
          "country": {
            "$ref": "#/components/schemas/Country"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "Country": {
        "type": "object",
        "properties": {
          "countryId": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "Location": {
        "type": "object",
        "properties": {
          "locationId": {
            "type": "integer",
            "format": "int64"
          },
          "city": {
            "$ref": "#/components/schemas/City"
          },
          "address": {
            "type": "string"
          },
          "postalCode": {
            "type": "string"
          }
        }
      },
      "HomePageDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "title": {
            "type": "string"
          },
          "imageUrls": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "descriptions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "buttonTexts": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "link": {
            "type": "string"
          },
          "userId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "CategoryDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "BookingDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "date": {
            "type": "string"
          },
          "time": {
            "type": "string"
          },
          "numberOfPersons": {
            "type": "integer",
            "format": "int32"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "userId": {
            "type": "integer",
            "format": "int64"
          },
          "comment": {
            "type": "string"
          },
          "restaurantId": {
            "type": "integer",
            "format": "int64"
          },
          "menuItemIds": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "categoryId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "UserDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "email": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "region": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "bookings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BookingDTO"
            }
          }
        }
      },
      "SubscriberDTO": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "userId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "Booking": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "restaurant": {
            "$ref": "#/components/schemas/Restaurant"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "date": {
            "type": "string"
          },
          "time": {
            "type": "string"
          },
          "numberOfPersons": {
            "type": "integer",
            "format": "int32"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "comment": {
            "type": "string"
          },
          "category": {
            "$ref": "#/components/schemas/Category"
          }
        }
      },
      "Category": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "promoCode": {
            "type": "string"
          },
          "bookings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Booking"
            }
          }
        }
      },
      "Restaurant": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "location": {
            "$ref": "#/components/schemas/Location"
          },
          "bookings": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Booking"
            }
          },
          "cuisine": {
            "type": "string"
          },
          "capacity": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Subscriber": {
        "required": [
          "email",
          "firstName",
          "lastName"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "promoCode": {
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          }
        }
      },
      "User": {
        "required": [
          "email",
          "password",
          "username"
        ],
        "type": "object",
        "properties": {
          "bookings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Booking"
            }
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "email": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "password": {
            "maxLength": 100,
            "minLength": 8,
            "type": "string"
          },
          "username": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "region": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "city": {
            "type": "string"
          }
        }
      },
      "ContactForm": {
        "required": [
          "email",
          "message",
          "name",
          "subject"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string"
          },
          "location": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "subject": {
            "maxLength": 150,
            "minLength": 1,
            "type": "string"
          },
          "message": {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          }
        }
      },
      "AuthResponseDTO": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string"
          },
          "tokenType": {
            "type": "string"
          }
        }
      }
    }
  }
}
